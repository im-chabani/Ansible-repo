---
- hosts: all
  become: true # equiv: sudo
  pre-tasks:
# --- UBUNTU / DEBIAN ---
  - name: Update / Upgrade (Ubuntu)
    tags: always,update,centos,ubuntu # To tailor the selection and ansible cmd
    apt:
      update_cache: yes
      upgrade: dist
    when: ansible_distribution == "Ubuntu" # var from "gather_facts"

# --- CENTOS ---
  - name: Update (Centos)
    tags: always,update,centos
    dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "CentOS"

#----------------------------------------------------------------------

  - name: create user called simone
    tag: always
    user:
      name: simone
      groups: root

#----------------------------------------------------------------------

hosts: workstations
become: true
tasks:
# --- Install unzip, dl, unzip and put Terraform binary in /bin ---
- name: install unzip
  package:
    name: unzip

- name: install terraform
  unarchive:
    src: https://releases.hashicorp.com/terraform/0.14.10/terraform_0.14.10_linux_amd64.zip #Terraform 0.14.10
    dest: /usr/local/bin
    remote_src: yes
    mode: 0755
    owner: root
    group: root

#----------------------------------------------------------------------

- hosts: web_servers
  become: true 
  tasks:
  # --- UBUNTU / DEBIAN ---
  - name: install apache and php (Ubuntu)
    tags: apache,ubuntu,webserver
    apt: # command we're using (Debian / ubuntu)
      name: 
        - apache2
        - libapache2-mod-php
      state: latest # install and check for latest whenever playbook executed
    when: ansible_distribution == "Ubuntu"

# --- CENTOS ---
  - name: install apache and php (Centos)
    tags: apache,centos,webserver
    dnf: 
      name: # Install Apache httpd 
        - httpd
        - php
      state: latest 
    when: ansible_distribution == "CentOS"

  - name: start httpd (CENTOS) # --- enable Apache CENTOS ---
    tags: apache,centos,httpd
    service:
      name: httpd
      state: started
    when: ansible_distribution == "CentOS"

  - name: change email address for admin # --- example of a change in a config file ---
    tags: apache,centos,httpd
    lineinfile: # change a line in a file. Careful of duplication in case of typos!
      path: /etc/httpd/conf/httpd.conf
      regexp: '^ServerAdmin' # regular expression
      line: ServerAdmin somebody@somewhere.net
    when: ansible_distribution == "CentOS"
    register: httpd

  - name: restart httpd (CentOS) # --- restart apache if it has changed CENTOS ---
    tags: apache, centos, httpd
    service:
      name: httpd
      state: restarted
    when: httpd.changed 

# --- Copy file in webservers ---
  - name: Copy a file
    tags: webserver,copy
    copy:
      src: ./files/default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

#----------------------------------------------------------------------

- hosts: db_servers
  become: true 
  tasks:

- name: install mariaDB (Ubuntu)
  tags: mariadb,ubuntu,db
    apt: 
      name: 
        - mariadb
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: install mariaDB (CentOS)
    tags: mariadb,centos,db
    dnf:
      name:
        - mariadb-server
      state: latest
    when: ansible_distribution == "CentOS"

#----------------------------------------------------------------------

- hosts: file_servers
  become: true # equiv: sudo
  tasks:

- name: install samba (Ubuntu)
  tags: ubuntu,smb
      name:
        - samba
      state: latest
    when: ansible_distribution == "Ubuntu"

# CMD :
# ansible-playbook --ask-become-pass install_apache.yml
# ansible-playbook --tags "mariadb,ubuntu" --ask-become-pass site.yml